QCM
Github : antoinetrouve.france@gmail.com


- Thème couleur client = noir et vert (Tact Factory = noir, vert, blanc)
- Authentification Sécurisée HTTPS + chiffrement mot de passe
- QCM par catégorie avec accès limité dans le temps et durée limitée
- Question à choix multiple, modification possible suivant / précédent
- calcul du résultat
- Questions avec contenu multimédia (audio-video)
- Androïd 4.1 -> 6.0 et smartphone portrait
- IOS 8 -> 9
- Windows Phone a voir avec le spécialiste

Client : Yohann / Tact Factory
point lors des cours (nov / déc / jan) -> possibilité de soumettre le cdc
contexte :
	- problème rcurent dans toures les écoles - contrôle QCM sans papier + correction automatique
	- envie d'avoir une app mobile et web poour passer du QCM rapidement
	- avtage correction effectué à la sortie.
	- audio / video = lien pour le moment
	- Accès par authetification (webservice en https, certificat, mdp chiffrée complexe maj / min / 8 caractère / caractères spéciaux / chiffres)
	- connexion avec un LDAP - Active Directory = option
	- QCM par catégorie (les cours)
	- Etudiants (compte user doit être lié à un groupe / accès à un groupe ou à un étudiant au QCM)
	- Un étudiant peut ne pas avoir de groupe
	- groupe = classe de l'IIA
	- étudiant n'a que le droit de lecture
	- client peut créer d'autre admin
	- accès limité dans le temps : QCM dispo de tel date heure à tel date heure
	- admin défini le temps du QCM
	- temps de vie limité = action suivant , pas accès à la question suivante, enregistrement du résultat si il le souhaite.
	- temps d'accès limiter (20 minutes pour faire le minuteur) à gérer dans le backend
	- QCM = une session
	- QCM passé n'est pas supprimé en bdd
	- questions liés à un seul QCM
	- Questions aléatoires (random) nbr de question pas limité
	- Résultat ne sera pas connu par l'étudiant
	- Affichage des résultats 
	- Email de confirmation / de contacts
	- forcément un compte utilisateur
	- adresse mail relié au compte donc login c'est l'adresse mail
	- QCM démarré on peut en sortir mais on ne peut le refaire.
	- validation d'un QCM
	- ajouter fonction de trie (option)
	- QCM de type TOEIC
	- Prévoir le web service pour un développement web
	- Backend = web service (doctrine / symphonie 2)
	- Lire la vidéo en interne.
	- liste de categories
	- liste de QCM
	- Application doit tourner sur WPhone / Android / IOS
	- Backend sur le navigateur gestion des droits
	- Système de notification (lorsqu'un QCM est disponible) ou géolocalisation
	- webservices calcul les résultats
	- analyse nbr de point par réponse QCM avec perte de points (bonne rep +1 / mauvaise rep -1) -> voir régle officielle
	- resultat = nombre de pt par réponse
	- inclure un sys d'aide pour informer des regles du jeux
	- gestion des token
	- pour les gestion des temps , la mise en veille du tel n'arrête pas le timer du QCM.

Livrable attendue
	- Pas de doc user
	- spécification générale et détailllée par app (notamment schéma UML)
	- Recette le 8 juillet 2016 - 9h00
	- 3 applications + backend
	- outil de gestion de prjet
	- dépot de documentation
	- Dépôt GIT obligatoire
	- doc de convention de nommage
	- Gestion de temps PMP
	- Gestion des risques avec solution
	- Outil de formalisme
	- Serveur d'automatisation de build jenkins Hudson 
	- CDC -> expression des besoins / exigences et contraintes / justifier la solution
	- Diagramme de classe / d'activité / de composant / maquette ou user case (global)
	- Plan de test unitaire (requête phone -> webservice au minimum et/ou fonctionnel
	- Test de validation client.
	- Identification des librairies (listing et licence et pourquoi)
	- Budget de la solution (délai et cout)
	- prendre des conventions de nommage existant.
	- Qualité des commentaires et doc dans le code source (java doc)
	- cohérence bdd / schéma UML (génération UML)
	- SQLLite 
	- reporting du code checkstyle, PMD et FindBugs obligatoire si cours -> verifie la qulaité du code au niveau de l'écriture.
	- Implémentation du webservice
	- Redéfinition du planning en fonction des aléas
	- Application exécutable. TRES TRES IMPORTANT (test sur un pc , cloner le depot git)
	- Hyper V debian


Webservice 	13 jan
IOS			21 jan / 7 mars



VIEW (classé par entité)
	USER 
		CREATE
		LISTUSER
		Login


